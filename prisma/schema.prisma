// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user{
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  firstName     String      @db.VarChar(100)
  middleName    String      @db.VarChar(100)
  lastName      String      @db.VarChar(100)
  mobile        String      @db.VarChar(100)  @unique
  email         String      @db.VarChar(100)  @unique
  password      String      @db.VarChar(100)
  admin         Int         @db.TinyInt
  registeredAt  DateTime    @default(now()) @db.Timestamp(0)
  lastLogin     DateTime    @default(now()) @db.Timestamp(0)
  createAt      DateTime    @default(now()) @db.Timestamp(0)
  updateAt      DateTime    @default(now()) @db.Timestamp(0)  @updatedAt
  category          category[]
  product           product[]
  product_meta      product_meta[]
  product_review    product_review[]
  cart              cart[]
  order             order[] 
}

model category{
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  title         String      @db.VarChar(100)
  metaTitle     String      @db.VarChar(100)
  slug          String      @db.VarChar(100)
  content       String      @db.VarChar(100)
  user          user[]
  product       product[]
  createAt      DateTime    @default(now()) @db.Timestamp(0)
  updateAt      DateTime    @default(now()) @db.Timestamp(0)  @updatedAt
}

model product{
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  firstName     String      @db.VarChar(100)
  metaTitle     String      @db.VarChar(100)
  slug          String      @db.VarChar(100)
  summary       String      @db.VarChar(100)
  price         Int        
  discount      Int
  userId        BigInt      @db.UnsignedBigInt
  categoryId    BigInt      @db.UnsignedBigInt
  user          user        @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  category      category    @relation(fields: [categoryId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  product_meta  product_meta[]
  product_review  product_review[]
  publishedAt   DateTime    @default(now()) @db.Timestamp(0)
  startsAt      DateTime    @default(now()) @db.Timestamp(0)
  endsAt        DateTime    @default(now()) @db.Timestamp(0)
  createAt      DateTime    @default(now()) @db.Timestamp(0)
  updateAt      DateTime    @default(now()) @db.Timestamp(0)  @updatedAt
}


model product_meta{
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  key           String      @db.VarChar(100)
  content       String      @db.VarChar(100)
  userId        BigInt      @db.UnsignedBigInt
  productId     BigInt      @db.UnsignedBigInt
  user          user        @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  product       product     @relation(fields: [productId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  createAt      DateTime    @default(now()) @db.Timestamp(0)
  updateAt      DateTime    @default(now()) @db.Timestamp(0)  @updatedAt
}

model product_review{
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  title         String      @db.VarChar(100)
  rating        String      @db.VarChar(100)
  content       String      @db.VarChar(100)
  userId        BigInt      @db.UnsignedBigInt
  productId     BigInt      @db.UnsignedBigInt
  user          user        @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  product       product     @relation(fields: [productId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  createAt      DateTime    @default(now()) @db.Timestamp(0)
  updateAt      DateTime    @default(now()) @db.Timestamp(0)  @updatedAt
}

model cart{
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  title         String      @db.VarChar(100)
  sessionId     String      @db.VarChar(100)
  token         String      @db.VarChar(100)
  status        String      @db.VarChar(100)
  firstName     String      @db.VarChar(100)
  middleName    String      @db.VarChar(100)
  lastName      String      @db.VarChar(100)
  mobile        String      @db.VarChar(100)  
  email         String      @db.VarChar(100)  
  city          String      @db.VarChar(100)  
  country       String      @db.VarChar(100)
  userId        BigInt      @db.UnsignedBigInt
  user          user        @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  createAt      DateTime    @default(now()) @db.Timestamp(0)
  updateAt      DateTime    @default(now()) @db.Timestamp(0)  @updatedAt

}

model order{
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  title         String      @db.VarChar(100)
  token         String      @db.VarChar(100)
  subTotal      Int
  itemDiscount  Int
  tax           Int
  total         Int
  discount      Int
  grandTotal    Int
  firstName     String      @db.VarChar(100)
  middleName    String      @db.VarChar(100)
  lastName      String      @db.VarChar(100)
  mobile        String      @db.VarChar(100)  
  email         String      @db.VarChar(100)  
  city          String      @db.VarChar(100)  
  country       String      @db.VarChar(100)
  userId        BigInt      @db.UnsignedBigInt
  user          user        @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  createAt      DateTime    @default(now()) @db.Timestamp(0)
  updateAt      DateTime    @default(now()) @db.Timestamp(0)  @updatedAt
}


